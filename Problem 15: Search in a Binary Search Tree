We are asked to return the subtree whose root contains the given value.
Meaning we need to return the reference to the TreeNode whose calue is equal to the given value.
Hence we just start from the root of tree, and if is's value is greater move left, else move right. (Structure of the BST)

Solution:
class Solution {
    public TreeNode searchBST(TreeNode root, int val) {
        
        while(root!=null && root.val!=val)
        {
            if(val<root.val) root=root.left;
            else if(val>root.val) root=root.right;
        }
        
        return root;
        
    }
}

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
